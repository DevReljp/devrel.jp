<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://devrel.jp/feed.xml" rel="self" type="application/atom+xml" /><link href="https://devrel.jp/" rel="alternate" type="text/html" /><updated>2022-04-30T09:10:26+09:00</updated><id>https://devrel.jp/feed.xml</id><title type="html">DEVREL - 開発者向けマーケティング支援サービス -</title><subtitle>DevRelは開発者向けマーケティング施策です。私たちは企業の製品、サービスを広く開発者に知ってもらうためのDevRelをサポート、代行しています。</subtitle><entry><title type="html">認知特性に合わせたコンテンツの作り方・使い方</title><link href="https://devrel.jp/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84/2022/04/29/recycle-contents.html" rel="alternate" type="text/html" title="認知特性に合わせたコンテンツの作り方・使い方" /><published>2022-04-29T09:00:00+09:00</published><updated>2022-04-29T09:00:00+09:00</updated><id>https://devrel.jp/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84/2022/04/29/recycle-contents</id><content type="html" xml:base="https://devrel.jp/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84/2022/04/29/recycle-contents.html"><![CDATA[<p>先日こんなツイートを見かけました。ヒデさんはStripeのデベロッパーアドボケイトです。</p>

<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">認知特性はDevRelのコンテンツ配信チャンネルどこにするかでも考えないとよなーとたまに思う。<br />ブログだけだと視覚と聴覚の人がしんどいかもって <a href="https://t.co/43o4NbXqpG">https://t.co/43o4NbXqpG</a></p>&mdash; hide@Stripe Developer Advocate 🐈🐈🦓🥑 (@hide__dev) <a href="https://twitter.com/hide__dev/status/1517900873065984000?ref_src=twsrc%5Etfw">April 23, 2022</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>簡単に言えば、人の認知特性は次の3つに分かれます。そして、それぞれ得意とする情報処理領域があります。</p>

<table class="table">
  <thead>
    <tr>
      <th>分類</th>
      <th>得意とする領域</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>視覚優位</td>
      <td>動画、ビジュアライズ、プレゼンテーション</td>
    </tr>
    <tr>
      <td>言語優位</td>
      <td>ブログ、ドキュメント、メーリングリスト</td>
    </tr>
    <tr>
      <td>聴覚優位</td>
      <td>ポッドキャスティング</td>
    </tr>
  </tbody>
</table>

<p>それぞれ得意とする領域が異なるので、各領域に対して情報発信する必要があるよね、という話です。</p>

<p>これだけ考えると、YouTubeに流せば良いとかブログ記事を書けば良いのかという各論の話になってしまうので、注意してください。皆さんの開発者が、この3つの領域のいずれかにいるのではなく、すべての領域に存在することに気付いてください。さらに言えば、視覚100%で他は0%に得意領域が割り振られている訳ではありません。多くの人は、どちらかと言えば視覚が好き…といった程度です。</p>

<p>たとえばSORACOMのMAXさんはこうツイートしています。</p>

<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">YouTubeの15分コンテンツって、テキストにすると2〜3分で読み切れる内容なのは、なぜなんだぜ。しかも検索できないから、知りたいことを得るために全部見る必要があるし、7割位の確率でハズレだったりする。つらい。</p>&mdash; 松下享平(Max)/ソラコム (@ma2shita) <a href="https://twitter.com/ma2shita/status/1517156968213118976?ref_src=twsrc%5Etfw">April 21, 2022</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>実際、動画は冗長的だったり、検索が弱かったりするという難点があります。各領域ごとにPro/Conをまとめるとこんな感じでしょうか。</p>

<table class="table">
  <thead>
    <tr>
      <th>分類</th>
      <th>メリット</th>
      <th>デメリット</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>視覚優位</td>
      <td>全体の操作などが分かりやすい。話し言葉で理解しやすい。</td>
      <td>検索しづらい。ブックマークしづらい。TVなどのコンテンツと比べると面白くない。</td>
    </tr>
    <tr>
      <td>言語優位</td>
      <td>検索容易性。ブックマークできる。コピペできる。</td>
      <td>テキストだけでは分かりづらいことがある。長文はそれだけで嫌がられる。</td>
    </tr>
    <tr>
      <td>聴覚優位</td>
      <td>耳だけで良い。仕事をしながら、移動しながら聞ける。</td>
      <td>ブックマークしづらい。検索しづらい。</td>
    </tr>
  </tbody>
</table>

<p>いずれの場合においても、個人が自分にとって理解しやすい方法を選ぶのと同時に、メリットやデメリットが存在します。作り手側を考えると、言語 &gt; 視覚 &gt; 視覚くらいの順番で作成に時間がかかるかも知れません。</p>

<h2 id="大事なのは組み合わせと再利用">大事なのは組み合わせと再利用</h2>

<p>そこで考えなければいけないポイントが2つあります。</p>

<ol>
  <li>組み合わせ</li>
  <li>再利用</li>
</ol>

<h3 id="組み合わせ">組み合わせ</h3>

<p>組み合わせは各要素を単独で使うのではなく、補助し合う存在として使うことです。</p>

<p>例えばプレゼン動画を作成したとします。それだけ見れば、視覚優位なコンテンツです。その話している内容をすべてテキスト起こしして、ブログ記事にします。こうすることで、言語優位なコンテンツになります。さらに、ブログ記事から喋っている部分に飛べるリンクを用意したり、埋め込み動画も使います。こうすることで、テキストから気になった部分を即座に再生して、内容を確認できます。</p>

<h3 id="再利用">再利用</h3>

<p>1つのコンテンツを視覚・言語・聴覚領域のいずれかに全振りするのではなく、積極的に使い回しましょう。イベントの動画をテキスト起こししてブログで紹介したり、プレゼンテーション動画で使ったスライドを共有サイトにアップロードする、投稿したブログ記事の補足説明をポッドキャスティングで行うと言った具合です。</p>

<p>普段ブログ記事は書いているのに、動画コンテンツを作ろうと思ったら一から企画を考えるというのはよくある間違いです。すでに種（ブログ記事）はあるので、それを再利用する方が継続性が見込めます。考える負担も少なくて済みます。コンテンツの重複を恐れるかも知れませんが、そもそも届く範囲が異なるので問題ありません。テキストが好きな人にはブログ記事、動画を好む人にはYouTubeで届ければ良いだけです。</p>

<h2 id="他の特性">他の特性</h2>

<p>今回は認知特性だけに注目しましたが、他にも領域が異なる話題はよくあります。例えばTwitter派とFacebook派、チャット派とメール派、日本語と英語などです。それぞれ棲み分けがあるので、幅広く情報を配信する必要があります。</p>

<p>とはいえ、各領域ごとに一からコンテンツを作るのは労力がかかりすぎるのでお勧めしません。ツールを使って複数プラットフォーム向けに配信したり、テキスト起こしや翻訳を自動化するなどして、なるべく低コストで届けられる領域を増やしましょう。</p>

<hr />

<p>結論としては、人によって認知特性が異なるので、それぞれに向けてコンテンツを配信するようにしましょう。ツールは増えているので、領域を増やすのに必要なコストはぐっと下がっているはずです。</p>

<p>後は作成したコンテンツを1つの領域だけに提供するのは勿体ないので、なるべく使い回すようにしましょう。</p>

<p>MOONGIFTではブログの執筆や動画作成など、コンテンツ作成に関するサポートを行っています。ぜひ<a href="/contact">お問い合わせください</a>！</p>]]></content><author><name>moongift</name></author><category term="コンテンツ" /><summary type="html"><![CDATA[先日こんなツイートを見かけました。ヒデさんはStripeのデベロッパーアドボケイトです。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://devrel.jp/images/articles/ear-eye-text.png" /><media:content medium="image" url="https://devrel.jp/images/articles/ear-eye-text.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">お前は今までに作成したSDKの数を覚えているか？</title><link href="https://devrel.jp/%E9%96%8B%E7%99%BA/sdk/2022/04/13/development-sdk.html" rel="alternate" type="text/html" title="お前は今までに作成したSDKの数を覚えているか？" /><published>2022-04-13T09:00:00+09:00</published><updated>2022-04-13T09:00:00+09:00</updated><id>https://devrel.jp/%E9%96%8B%E7%99%BA/sdk/2022/04/13/development-sdk</id><content type="html" xml:base="https://devrel.jp/%E9%96%8B%E7%99%BA/sdk/2022/04/13/development-sdk.html"><![CDATA[<p>こんなツイートをたまたま見てしまったがために…。</p>

<blockquote class="twitter-tweet" data-partner="tweetdeck"><p lang="ja" dir="ltr">DevRel と SDK 開発の兼任ってめちゃくちゃ格好いいですね……😍</p>&mdash; lettenj61 (@lettenj61) <a href="https://twitter.com/lettenj61/status/1514088366928973825?ref_src=twsrc%5Etfw">April 13, 2022</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>ということで、これまでDevRelサポートを提供する中で開発してきたSDKをリストアップしてみようと思います。これは2022年4月現在です。</p>

<h2 id="ncmbニフクラ-mobile-backend"><a href="https://mbaas.nifcloud.com/">NCMB（ニフクラ mobile backend）</a></h2>

<p>NCMBは一番サービス提供の歴史が長いので、多いですね。私が開発していない<a href="https://github.com/NCMBMania/php-ncmb">PHP SDK</a>もあります。公式SDKはJavaScript/Swift/Objective-C/Java（Android）/Kotlin（Android）/Unity向けがあります。足りない部分を私が開発している形です。</p>

<ul>
  <li><a href="https://github.com/NCMBMania/ncmb-dart">Dart &amp; Flutter.</a></li>
  <li><a href="https://github.com/NCMBMania/ncmb_deno">TypeScript &amp; Deno</a></li>
  <li><a href="https://github.com/NCMBMania/ncmb_gas">Google Apps Script</a></li>
  <li><a href="https://github.com/NCMBMania/ncmb_js_light">JavaScript SDK（軽量版）</a></li>
  <li><a href="https://github.com/NCMBMania/ncmb-react-native">React Native</a></li>
  <li><a href="https://github.com/NCMBMania/ncmb-ruby-client">Ruby</a></li>
  <li><a href="https://github.com/NCMBMania/ncmb_xamarin">C# &amp; Xamarin</a></li>
  <li><a href="https://github.com/NCMBMania/ncmb_py">Python</a></li>
  <li><a href="https://github.com/NCMBMania/java-sdk">Java</a></li>
  <li><a href="https://github.com/NCMBMania/ncmb-excel">Excel VBA</a></li>
</ul>

<h2 id="customers-mail-cloud"><a href="https://smtps.jp/">Customers Mail Cloud</a></h2>

<p>メール配信サービスです。ブログ記事執筆を提供する中で生まれたSDKです。</p>

<ul>
  <li><a href="https://github.com/goofmint/CustomersMailCloud-js">Node.js</a></li>
  <li><a href="https://github.com/goofmint/Customers-Mail-Cloud-Java">Java</a></li>
  <li><a href="https://github.com/goofmint/Customers-Mail-Cloud-VBA">Excel VBA</a></li>
  <li><a href="https://github.com/goofmint/CustmersMailCloud-rb">Ruby</a></li>
  <li><a href="https://github.com/goofmint/CustomersMailCloudPy">Python</a></li>
</ul>

<h2 id="quality-forward"><a href="https://www.veriserve.co.jp/qualityforward/">Quality Forward</a></h2>

<p>テストのクラウド管理サービスを提供しています。</p>

<ul>
  <li><a href="https://github.com/goofmint/qualityforward-rb">Ruby</a></li>
  <li><a href="https://github.com/goofmint/qualityforward-py">Python</a></li>
  <li><a href="https://github.com/goofmint/qualityforward-node">Node.js</a></li>
</ul>

<h2 id="blastengine"><a href="https://blastengine.jp/">blastengine</a></h2>

<p>エンジニアフレンドリーなメール配信サービスです。最近サービス提供を開始したこともあり、今後SDK拡充予定です。</p>

<ul>
  <li><a href="https://github.com/blastengineMania/blastengine-java">Java</a></li>
  <li><a href="https://github.com/blastengineMania/blastengine-node">Node.js</a></li>
</ul>

<h2 id="なぜsdkを開発するのか">なぜSDKを開発するのか</h2>

<p>APIを提供するサービスがあったとして、それをわざわざHTTPライブラリから直接操作したいと思うでしょうか。コードがごちゃっとしますし、仕様を理解してコーディングするのは苦痛です。私ならSDKがあるサービスとないサービスの2つがあれば、SDKがあるサービスを選ぶでしょう。</p>

<p>ということで、開発者にとってのペインポイントを除去し、かつ選ばれる理由を提供するためにSDKを開発しています。全機能を網羅していないものも多いですが、その辺りは利用者の需要に合わせて開発しています。</p>

<p>後はブログ記事のネタとして使えるのが良いです。SDKを開発して、それの使い方をブログ記事にするというマッチポンプ的なことをよく行っています。</p>

<p>例）<br />
<a href="https://qiita.com/goofmint/items/b7498e17e6e3b136660d">blastengineのJava SDKを使ってメール送信を行う - Qiita</a></p>

<h2 id="言語選定">言語選定</h2>

<p>色々な言語で開発していますが、極力そのサービス利用者が使っている言語を優先的に採用しています。サーバーサイドの場合、Java需要が強いように感じます。その後はPHP、Node.js、Python、Rubyでしょうか。</p>

<p>アプリ界隈であれば最近ならFlutter、ついでReact Nativeになるかなと。Xamarinはコロナ感染チェックアプリで一躍有名になったので、開発してみました。</p>

<p>正直得意ではない言語も多いので、その辺りはテストを書きつつググりながら実装していたりします。C#とかJavaは得意ではないですが、IDEがあるので安心ですね（それでも苦戦することが多いですが）。</p>

<h2 id="パッケージ管理への登録">パッケージ管理への登録</h2>

<p>RubyであればRubygems、Pythonであればpipなどが有名なパッケージ管理システムです。この辺りへの登録はもちろん行っています。</p>

<p>各パッケージ管理のプロフィールページです。</p>

<ul>
  <li><a href="https://pypi.org/user/goofmint/">PyPI</a></li>
  <li><a href="https://rubygems.org/profiles/moongift">RubyGems.org</a></li>
  <li><a href="https://www.npmjs.com/~moongift">npm</a></li>
  <li><a href="https://www.nuget.org/profiles/goofmint">NuGet</a></li>
  <li><a href="https://pub.dev/packages/ncmb">Dart</a></li>
</ul>

<p>この辺りはインストールのしやすさはもちろん、個人のブランディングとして行っている面もあります。なお、JavaのMaven Central Repositoryはとても面倒なイメージがあって登録していません…。</p>

<h2 id="まとめ">まとめ</h2>

<p>今後はGo言語やRust辺りでも開発していきたいのと、PHPは自分の中で歴史がバージョン5で終わってしまっているので、SDK開発を通して勉強し直したいと思っています。</p>

<p>SDK開発はDevRelにおいて、コーディングスキルが活かせる場面だと思うので、ぜひ取り組んでみると良いでしょう。</p>

<p><a href="/contact">MOONGIFTではブログ執筆を通してSDKを開発したり、単体でSDK開発も承りますのでぜひお問い合わせください</a>。</p>]]></content><author><name>moongift</name></author><category term="開発" /><category term="SDK" /><summary type="html"><![CDATA[こんなツイートをたまたま見てしまったがために…。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://devrel.jp/images/articles/sdk.jpg" /><media:content medium="image" url="https://devrel.jp/images/articles/sdk.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">なぜ私はDevRelを愛しているのか</title><link href="https://devrel.jp/%E5%85%A8%E8%88%AC/2022/04/10/why-i-love-devrel.html" rel="alternate" type="text/html" title="なぜ私はDevRelを愛しているのか" /><published>2022-04-10T09:00:00+09:00</published><updated>2022-04-10T09:00:00+09:00</updated><id>https://devrel.jp/%E5%85%A8%E8%88%AC/2022/04/10/why-i-love-devrel</id><content type="html" xml:base="https://devrel.jp/%E5%85%A8%E8%88%AC/2022/04/10/why-i-love-devrel.html"><![CDATA[<p>私はとても成績優秀な学生という訳ではなく、むしろ高専時代の5年生（高専は高校3年+短大2年の計5年間もあります。しかも1学科1クラス！）には落第寸前という状態でした。絶対落とせない授業を（自分のせいで）落としたからですが、この時に救ってくれたのが製図の授業を行っていた教諭でした。</p>

<p>そんな黒歴史は良いとして。その教諭は元々新幹線などの設計を行っていた方で、退職後に東京工業高等専門学校の教諭になったようです。そんな社会人としての経験も豊富な教授が授業で言った一言がとても印象に残っています。</p>

<p>「エンジニアだけで会社を建てたら幸せだろうな」</p>

<p>おそらく、その教諭は開発現場と他部署や経営層との軋轢を色々と感じてきたのだと思います。そしてエンジニアとしての物作りに対する技術力と情熱があれば、素晴らしい企業になると信じていたのでしょう。もちろん、それだけでビジネスが成り立つ訳ではありませんが、個人的に今なお共感する部分もあります。</p>

<p>なぜなら、個人的にエンジニアが大好きであり、彼らがまだ見ぬ素晴らしい未来を作り上げてくれると強く信じているからです。昨今、エンジニア不足が叫ばれるようになっており、その中でエンジニアの待遇がIT系を中心として大幅に改善しているのはとても良いことだと感じています。スタートアップの多くが技術力を武器に成長し、その結果として上場しているケースも増えており、まさにエンジニアが世界を変えている状態だと言えるでしょう。</p>

<p>教諭の夢を一足飛びに実現するのは難しいですが、一部の界隈においてはエンジニアにとって幸せな世界が実現できてきているのではないでしょうか。</p>

<h2 id="moongiftの運営での学び">MOONGIFTの運営での学び</h2>

<p>さて、学生時の話は終わって、次に私が社会人になった後の話をします。</p>

<p>3社目の転職をした後、私は<a href="https://www.moongift.jp/">MOONGIFT</a>というブログを立ち上げました（現在は運営停止しています）。これはオープンソース・ソフトウェアを紹介するというテーマを持ったブログで、その後20年運営され続けることになります。このブログをはじめるきっかけは、自分が仕事の中で利用したり、探し出したオープンソース・ソフトウェアを他のエンジニアにも知って欲しいという思いからです。社内にこうした技術的会話を楽しめる人がいなかった（文字通りいなかった）こともあって、私はその矛先を外部に求めました。オープンソース・ソフトウェアというキーワードが盛り上がっていたこともあり、MOONGIFTはエンジニア周りではそれなりに知られる存在に成長していきました。</p>

<p>MOONGIFTで紹介したソフトウェアを利用して、彼らの開発（仕事、プライベートを問わず）をサポートできているという実感はとても嬉しいものでした。毎日チェックしていますと言われたり、新人の頃とても役立ちましたと言われたことも少なくありません。さらに、MOONGIFTで紹介されたことを誇らしく語ってくれる人たちも現れました。最近でもMOONGIFTで紹介されたことがあるんですよ、と教えてくれる人に会うことがあります。こういった話はとても嬉しいものです。</p>

<p>特に予想外だった思い出を2つほど紹介します。</p>

<h3 id="zabbix-japanのケース">Zabbix Japanのケース</h3>

<p>1つ目はMOONGIFT運営10周年を記念して特別な企画を考える中で、スポンサーとして<a href="https://www.zabbix.com/jp">Zabbix Japan</a>社にコンタクトした時のことです（Zabbixは有名な監視ソフトウェアです）。ツテはなかったので、公式サイトのお問い合わせフォームから連絡したのですが、すぐにZabbix Japan代表の寺島さんから返信をいただきました。そして、二つ返事で会ってくださったのです。</p>

<p>会ってみて理由が分かったのですが、Zabbix Japan設立当時で全く知名度がなかった時にMOONGIFTで紹介したところ、Webサイトへの訪問者が一気に増えたらしいのです。お会いした頃には既に有名なソフトウェアになっていたのですが、寺島さんはその時のことを覚えてくれていて、とても感謝されました。その後、記念コンテンツへのスポンサードもしてくれて、こちらとしても知らぬところで作った縁とはいえ、MOONGIFTを運営して良かったと感じた覚えがあります。</p>

<h3 id="concrete5-japanのケース">Concrete5 Japanのケース</h3>

<p>もう1つは<a href="https://concrete5-japan.org/">Concrete5 Japan</a>の榊さんとはじめて会った時の話です。Concrete5というのはWikiエンジンで、CMSになります。このConcrete5はとても素晴らしいソフトウェアで、MOONGIFTで紹介した記事を読んだ方がすぐにアメリカの開発元まで行って、販売契約を取り付けたというのです。そして、その結果としてConcrete5 Japanという企業設立に至ったのです。そんなことを全く知らなかった私としては、MOONGIFTでの紹介を通じて新しいビジネスを創出できたことに感動しました。</p>

<hr />

<p>他にもMOONGIFTを通じて生まれた出会いや思い出はいくつもあるのですが、今回はこの程度にします（本筋でもありませんので）。ただいえることは、MOONGIFTの運営を通じて開発者の生産性に寄与すること、彼らに正しい情報を正しく伝えることの重要性を理解したということです。</p>

<h2 id="devrelとの出会い">DevRelとの出会い</h2>

<p>そして2014年2月にDevRelという単語に出会います。ここに至る経緯として一番大きかったのは <a href="https://twitter.com/masuidrive">@masuidrive</a> さんと知り合ったことでしょう。彼とは十数年来のチャット友達なのですが、彼が当時住んでいたアメリカを離れる際に直前でAppceleratorへ入社を決め、日本でTitaniumのエバンジェリスト活動を開始しました。これはおそらく2009〜10年頃でしたが、その頃はDevRelという単語はありませんし、私も気にしていませんでした。</p>

<p>そしてDevRelを意識するきっかけになったのは2014年2月頃になります。そのきっかけは、某クラウドサービスの展開が日米で全く異なるものだったのに起因します。その某クラウドサービスは本国のアメリカではハッカソンを開催したり、開発者コミュニティを立ち上げていました。それに対して日本では某電話会社との出資という形でマーケティング展開していました。その1つが本屋でプレミアムサービスのライセンス（半年間 or 年間）を販売するというものです。クラウドサービスなのに、です。</p>

<p>この日米の違いがとても気になりました。前者（アメリカ）は開発者を重視し、寄り添う形でサービスを拡大しています。対して日本では本屋でライセンス販売です。APIもSDKもまったく宣伝せず、知る人ぞ知る状態でした。私としてはすでに数多のサービスがAPIを公開し、連携サービスによってビジネスを拡大する様子を見てきたこともあり、前者の方が正しいやり方に思えました。むしろ後者は悪手に見えましたし、実際うまくいっているように見えませんでした。</p>

<p>そこで、アメリカで何が行われているのかを調べた結果、エバンジェリストと呼ばれる人たちがハッカソンや開発者とのコミュニケーションを主導していることが分かりました。そして、それは @masuidrive さんに聞いても同意がとれたことで、確信が得られました。しかし、エバンジェリストが何をやっているのかは分かりませんでした。よくよく調べた結果、当時Googleブラジル（確か）でそういった開発者向けの活動をDevRelと呼んでいることが分かったのです。この14年2月が、私とDevRelの出会った月になります（具体的な日付は不明）。</p>

<p>このDevRelがなぜ日本で流行っていないのかを考えたところ、エバンジェリストの素養の高さに気付きました。プレゼン能力が高く、ブログ記事が書けて、さらに開発者としてのスキルも高い人たちになります。こうした人たちはごく限られますし、雇用しようと思うと年収が当然高くなります。日本の雇用制度の中でマッチさせるのは非常に難しいでしょう。</p>

<p>そこでDevRelをサービス化し、100%のコミットではなく、複数社のDevRelサポートを機能に応じた費用で提供するサービスを考えました。これが2022年現在も続いているDevRelサービスになります。このDevRelサービスは3月17日にテスト販売し、4月からニフティ株式会社（当時。現FJCT）の<a href="https://mbaas.nifcloud.com/">ニフクラ mobile backend</a>への提供を開始しました。すでに8年経った訳ですが、今なお継続的に提供しています。また、8年間にわたって国内外様々な企業様にサービス提供しています。</p>

<h2 id="開発者へ正しい情報を正しい方法で届ける">開発者へ正しい情報を正しい方法で届ける</h2>

<p>この8年間DevRelを続けてきて感じるのは、DevRelは「開発者と寄り添える存在である」ということです。私は常々、DevRelは「無敵の未来を作る開発者を支援する」ものだと言ってきました。コロナ禍のような、一見すると絶望的になる状況であっても開発者は前を向き、苦難を乗り越えるようなサービスやデバイスを開発しています。DevRelはそんな彼らを支援し、鼓舞し、共になければいけません。素晴らしい未来を作り上げるソフトウェアやサービスを生み出すきっかけになれるかも知れないのです。DevRelはそんな素晴らしい可能性を秘めています。</p>

<p>企業としての<a href="https://moongift.co.jp/">MOONGIFTのミッションは「開発者へ正しい情報を正しい方法で届ける」</a>としています。オープンソース・ソフトウェアを紹介していた当時から、正しい情報を開発者に届けようとしてきました。現在のDevRelにおいても、その方針は変わっていません。そして、その正しい情報によって開発者の生産性が向上したり、最高のプロダクトが生み出されたら、思わず歓喜してしまうでしょう。</p>

<p>開発者に寄り添い、彼らと共にいることができる、DevRelはそれが実現できるから私は大好きなのです。願わくば、そうして少しでも手伝えたことでエンジニアにとって幸せな企業へ成長したり、個人のキャリアが幸せなものになればとても嬉しいです。それが教諭の言ったエンジニアの幸せに通じる道だと考えています。</p>

<hr />

<p>そんなMOONGIFTではブログの執筆やコミュニティ支援を手伝ってくれる仲間を募集しています。DevRelに興味があれば、まず<a href="/contact">気軽にお話ししてみましょう</a>！</p>]]></content><author><name>moongift</name></author><category term="全般" /><summary type="html"><![CDATA[私はとても成績優秀な学生という訳ではなく、むしろ高専時代の5年生（高専は高校3年+短大2年の計5年間もあります。しかも1学科1クラス！）には落第寸前という状態でした。絶対落とせない授業を（自分のせいで）落としたからですが、この時に救ってくれたのが製図の授業を行っていた教諭でした。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://devrel.jp/images/articles/i-love-devrel.jpeg" /><media:content medium="image" url="https://devrel.jp/images/articles/i-love-devrel.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">オンライン/オフライン同時開催型のパネルディスカッションで得られた知見</title><link href="https://devrel.jp/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/2022/04/07/hybrid-event.html" rel="alternate" type="text/html" title="オンライン/オフライン同時開催型のパネルディスカッションで得られた知見" /><published>2022-04-07T09:00:00+09:00</published><updated>2022-04-07T09:00:00+09:00</updated><id>https://devrel.jp/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/2022/04/07/hybrid-event</id><content type="html" xml:base="https://devrel.jp/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/2022/04/07/hybrid-event.html"><![CDATA[<p>4月6日に<a href="https://devrel.connpass.com/event/243022/">DevRel Meetup in Tokyo #73 〜ソーシャル活用術〜</a>を開催しました。まん延防止等重点措置が解除され、久々のオフライン会場を用意してのイベントになります。2021年12月にもオンラインとオフライン一緒にイベントを開催したのですが、その時には久々ということもあって、色々足りていませんでした。</p>

<p>今回はその前回の反省を踏まえて取り組んだので、その知見を共有します。</p>

<h2 id="アーキテクチャ">アーキテクチャ</h2>

<p>今回、全体としてのアーキテクチャは次のようになっています。</p>

<p><img src="/images/articles/hybrid-architecture.jpeg" alt="" /></p>

<p>各デバイスは次のように使われています。</p>

<h3 id="会議室用スピーカー">会議室用スピーカー</h3>

<p>会議室用スピーカーとして<a href="https://www.amazon.co.jp/Anker-A3305011-PowerConf-S500/dp/B08VWKFPCR">Anker PowerConf S500</a>を用意しました。執筆時点で2.5万円くらいです。会議室用スピーカーがあることで、各パネリストやモデレーターの方はマイクやイヤホンの用意が不要になります。発言が混じったとしても、聞き苦しくなりません。</p>

<p><img src="/images/articles/ankor.jpg" alt="" /></p>

<p>参加者がコミュニケーションしている声も遠くの方で聞こえるようで、多少なりともオフラインの雰囲気がオンラインの方々に聞こえたのは良かったと思います。</p>

<p>Anker PowerConf S500の実力としては、10〜15名くらいの箱であれば十分に聞こえるレベルのスピーカーでした。マイクについては、遠くにいる人は少し声を張り上げた方が良さそうです。パネリストやモデレーターの声であればまったく問題なく届けられていました。<a href="https://www.ankerjapan.com/products/a3305">Anker PowerConf S500は2台接続も可能</a>なので、20人規模の会場であれば2つあった方が良さそうです。</p>

<p>ケーブルはUSB type-A - USB type-C（3m）を利用しています。ケーブルが短いと色々苦労するので、長いものを用意しておくのがお勧めです。</p>

<h3 id="iphone">iPhone</h3>

<p>iPhoneはWebカメラとして利用しています。ノートPCのものではカメラ性能が良くありませんし、緊急時にノートPCの向きを変更することもできません。iPhone（またはAndroid）であれば使わなくなった端末があるかと思いますので、それを利用できます。今回はiPhone 6sを使っています。</p>

<p>iPhone 6sはOSがiOS12までしか使えないので、その制約で使えるアプリに限りがあります。今回は<a href="https://reincubate.com/ja/camo/">Reincubate Camo</a>を使っています。フリー版もあるようですが、画質などで制約があるのでPro版にするのが良いでしょう。ライフタイム（買い切り）で79.99ドルでした。</p>

<p>このReincubate CamoをノートPC、iPhone両方にインストールして、USBケーブルで接続します。ケーブルの取り回しが必要になるので、USB type-A - lightningケーブル（3m）を使っています。また、iPhoneは三脚を用意して、そこで固定しています。</p>

<h3 id="tv">TV</h3>

<p>テレビは予定外でしたが、たまたま部屋にあらかじめあったのでモニターとして利用しました。オンライン側のパネリストを映したり、画面共有を表示するのに使っています。イベントスペースにあるプロジェクターは大抵ルーメンが低く、会場を暗くする必要があります。それだと会場の様子が暗く、見づらいものになるので意外とTVは便利です。</p>

<blockquote class="twitter-tweet"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/DevRelJP?src=hash&amp;ref_src=twsrc%5Etfw">#DevRelJP</a> <a href="https://twitter.com/hashtag/DevRel?src=hash&amp;ref_src=twsrc%5Etfw">#DevRel</a> はじまりー。久々のハイブリッド開催！ <a href="https://t.co/FjodVEtOSh">pic.twitter.com/FjodVEtOSh</a></p>&mdash; Atsushi 🇯🇵 DevRel Meetup in 🗼 4/6 (@goofmint) <a href="https://twitter.com/goofmint/status/1511649429522386950?ref_src=twsrc%5Etfw">April 6, 2022</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>なお、TVに付属していた細いHDMIケーブル（3mくらい）の調子が悪く、短いものにせざるを得ませんでした。HDMIケーブルだけでも用意しておけば良かったと後悔しています。</p>

<h3 id="usbハブ">USBハブ</h3>

<p>配信用PCがMacBook Airだったこともあって、接続するUSBデバイスのポートが不足しがちです。USBハブを持っているのですが、久々に使ってみたら調子がとても悪く、接続が瞬断する状態でした…。定期的な確認が必要ですね。</p>

<h3 id="その他">その他</h3>

<p>その他用意していたものです。</p>

<h4 id="パネリスト同士の飛沫感染を防止するフィルム">パネリスト同士の飛沫感染を防止するフィルム</h4>

<p><img src="/images/articles/film.jpg" alt="" /></p>

<p>会場ではソファーを使う想定をしていたので、そのソファーの上にかけられる感染防止フィルムを用意しました。購入したのは<a href="https://www.amazon.co.jp/gp/product/B0897KVTXV/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&amp;psc=1">飛沫ブロッカー側面用タイプ</a>です。価格は1万円弱になります。これは片足タイプなので、土台をソファーの下に滑り込ませることで、見た目に邪魔にならないように配置できます。</p>

<h2 id="進行">進行</h2>

<p>今回の進行はすべてモデレーターでもある<a href="https://twitter.com/taiponrock">Taiji Eddie Hagino (@taiponrock)</a>さんにお任せとなっています。HDMIケーブルの問題、USBハブの問題があって、たいじさんのPCから画面共有、音声共有を行っています。</p>

<p>実際のイベント中は、こんな感じです。</p>

<blockquote class="twitter-tweet"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/DevRelJP?src=hash&amp;ref_src=twsrc%5Etfw">#DevRelJP</a> <a href="https://twitter.com/hashtag/DevRel?src=hash&amp;ref_src=twsrc%5Etfw">#DevRel</a><br /><br />会場からはこんな感じ。リアル感ありますね。 <a href="https://t.co/DBFHK6wv9O">pic.twitter.com/DBFHK6wv9O</a></p>&mdash; Shotaro Suzuki (@shosuz) <a href="https://twitter.com/shosuz/status/1511655855057354752?ref_src=twsrc%5Etfw">April 6, 2022</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>今から思ってみると、名刺を忘れていました。ちゃんと持っている方も多くて、素晴らしいなと思います。</p>

<h2 id="結果">結果</h2>

<p>ツイートは200超（速報値）なので、オンラインだけでイベントをやるよりも比較的伸びたのではないかと思っています。たいじさんからは運営している感があったという意見もあり、確かにそう感じます。オフラインで会場を準備したり、挨拶したりといった体験はオンラインではなかなか得づらいものだなと。</p>

<p>他の人に紹介されて一緒に来たという方もいました。これもオンラインだけでイベントをやっていると、なかなか生まれづらかったものです。オンラインは拡大という意味においては有効ですが、コミュニケーション深度はオフラインには敵わないかと思います。そういった意味で、オンラインとオフラインのハイブリッド開催は両方の良いところ取りができるのでお勧めです。</p>

<h2 id="tips">Tips</h2>

<p>以下はハイブリッド開催にあたってのTipsです。</p>

<h3 id="会場について">会場について</h3>

<p>コロナ禍になって、オフィスを縮小したりリモートワークを強化している企業が増えています。かつてはイベント会場を貸してくれる企業が多数ありましたが、コロナ禍になって利用が難しくなっています。担当者の負担が大きいですし、万一感染が広がる原因になってしまった時のリスクは大きいでしょう。</p>

<p>WeWorkのようなコワーキングスペースを借りている方であればそういった場所を使うこともできます。私の場合はSpaceMarketで探して利用しています。この時大事なのは、単なる会議室ではなく、少しでも非日常が感じられるような空間を選ぶことです。</p>

<h3 id="オンライン側のファシリテーション">オンライン側のファシリテーション</h3>

<p>ハイブリッド開催になると、オフラインはもちろんのことオンライン側でもファシリテーターが必要です。運営メンバーも全員オフラインに集まるのではなく、オンライン側の担当者が必要です。</p>

<p>オンライン側の担当者は、以下を担当します。</p>

<ul>
  <li>万一のネットワーク問題が発生した際のつなぎ</li>
  <li>イベント後の懇親会</li>
</ul>

<p>今回、一時的にネットワーク障害が発生し、パネルディスカッションが数分途絶えてしまいました。こうした不測の事態が発生した際に、オンライン会場側の場をつなぐのが役割です。オンラインにいる人たちは、リアルの会場でどういったトラブルが起こっているのか分かりません。何も分からないまま数分放置されるのは苦痛です。</p>

<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">カメラ高かったのにー！！(´Д` )←外出していない<br />とりあえず配信トラブルを救ってみましたd(´Д` )♪<a href="https://twitter.com/hashtag/DevReljp?src=hash&amp;ref_src=twsrc%5Etfw">#DevReljp</a> <a href="https://twitter.com/hashtag/DevRel?src=hash&amp;ref_src=twsrc%5Etfw">#DevRel</a> <a href="https://t.co/xGlWCLSq57">https://t.co/xGlWCLSq57</a></p>&mdash; odasho@5/25-26 Microsoft Build!! (@MS_odasho) <a href="https://twitter.com/MS_odasho/status/1511673302858997772?ref_src=twsrc%5Etfw">April 6, 2022</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>オンライン側の担当者は、現地のスタッフと連絡を取りつつ、場をつなぐのが大事な役割になります。</p>

<p>イベント後の懇親会についても大事です。試行錯誤しましたが、懇親会をハイブリッドで盛り上げるのはとても難しいです。そこで、今回はパネルディスカッションが終わったらリアル会場とオンライン側で分断し、コミュニケーションタイムとしました。</p>

<p>リアルで会っている場合は、参加者同士で勝手に話し始められるのですが、オンラインではなかなかうまくいかないものです。そうした時にコミュニケーションを促したり、場を盛り上げるのはオンライン側の担当者になります。</p>

<h2 id="まとめ">まとめ</h2>

<p>今回はパネルディスカッションでしたが、次回はセッション形式を予定しています。感染状況次第ですが、またハイブリッドでの開催を予定しています。セッション方式ではまた違った方式が最適になると思いますので、色々と試行錯誤してみたいと思います。</p>

<p>DevRel Meetup in Tokyoではそうしたトライ&amp;エラーを通して、自社イベントに活かせる学びを得ています。ぜひご参加ください！</p>

<p><a href="https://devrel.connpass.com/">DevRel Meetup in Tokyo - connpass</a></p>]]></content><author><name>moongift</name></author><category term="イベント" /><summary type="html"><![CDATA[4月6日にDevRel Meetup in Tokyo #73 〜ソーシャル活用術〜を開催しました。まん延防止等重点措置が解除され、久々のオフライン会場を用意してのイベントになります。2021年12月にもオンラインとオフライン一緒にイベントを開催したのですが、その時には久々ということもあって、色々足りていませんでした。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://devrel.jp/images/articles/hybrid-event.jpeg" /><media:content medium="image" url="https://devrel.jp/images/articles/hybrid-event.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">オンラインイベントを行うのに便利なサービスまとめ</title><link href="https://devrel.jp/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3/2022/03/24/online-event-tools.html" rel="alternate" type="text/html" title="オンラインイベントを行うのに便利なサービスまとめ" /><published>2022-03-24T09:00:00+09:00</published><updated>2022-03-24T09:00:00+09:00</updated><id>https://devrel.jp/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3/2022/03/24/online-event-tools</id><content type="html" xml:base="https://devrel.jp/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3/2022/03/24/online-event-tools.html"><![CDATA[<p>オンラインイベントを行う際には、何らかのサービスを使うのが一般的です。企業イベントであれば予算も付くでしょうが、コミュニティの場合はなるべく安価なツールを選びたいでしょう。</p>

<p>そこで今回は各種あるオンラインイベントツールについて、料金や機能の差異含めて紹介します。なお、あまり高いところは選択肢から外しています。</p>

<h2 id="ミーティング型">ミーティング型</h2>

<p>いわゆるオンライン会議システムをミートアップなどのイベントで利用する場合です。使い慣れているサービスが使える反面、参加していて面白さを感じられるかは疑問です。</p>

<h3 id="zoom"><a href="https://zoom.us/">Zoom</a></h3>

<p><img src="/images/articles/online-event-1.jpg" alt="" /></p>

<p>Zoomはおそらく社内外のミーティングで一番使われている会議システムではないでしょうか。Webブラウザでも利用できますが、基本的に専用アプリを利用するかと思います。</p>

<p>100人までのミーティングが月間2,000円（年間20,100円）で使えるのはかなり安価です。ただしベースが会議システムなので、ミートアップをしているというカジュアルな雰囲気になりづらいのが欠点です。いわば社内の会議室でミートアップをしているような雰囲気です。</p>

<p><a href="https://zoom.us/">ビデオ カンファレンス、クラウド電話、ウェビナー、チャット、仮想イベント | Zoom</a></p>

<h3 id="google-meet"><a href="https://apps.google.com/intl/ja/meet/">Google Meet</a></h3>

<p><img src="/images/articles/online-event-8.jpg" alt="" /></p>

<p>無料版のGoogle Meetでは100人までの参加者が募れますが、1時間に制限されます。Google Workspace Individual（月間7.99ドル）を利用すると100名まで、最長24時間のミーティングが作成できます。</p>

<p>Google Meetでは自動文字起こし機能が便利です。また、背景のぼかし機能は他のツールと比べてWebブラウザベースながら綺麗にぼかされる印象です。</p>

<p>Google Workspaceの場合はBusiness Standardであれば150名まで、ノイズキャンセルやブレイクアウトルーム付きのGoogle Meetになります（月間1,360円）。Business Starter（月間680円）の場合は100名まで、ノイズキャンセルやブレイクアウトルームはありません。</p>

<p><a href="https://apps.google.com/intl/ja/meet/">Google Meet（旧称 Hangouts Meet） - 無料のビデオ会議</a></p>

<h2 id="バーチャルコミュニケーションツール">バーチャルコミュニケーションツール</h2>

<p>コロナ禍になって一気に注目を集めたのがバーチャルコミュニケーションツールです。主に社内コミュニケーション促進のために使われていますが、コミュニティイベントでも利用できます。</p>

<h3 id="ovice"><a href="https://ovice.in/ja/">oVice</a></h3>

<p><img src="/images/articles/online-event-12.jpg" alt="" /></p>

<p>oViceは平面な空間上に丸いアイコンが表示されて、そのアイコン同士の距離感によって音声の強弱が変わるコミュニケーションツールです。会議室やコミュニケーションアイコンを作れば、そこでWebカメラを使ったコミュニケーションも可能です。Webブラウザだけ、専用アプリが不要なのは利点です。</p>

<p>かなり機能が多いですが、UIが分かりづらいのが難点です。初見で使いこなすのが難しいため、イベントの登壇者などに使い方を教えるのは時間がかかるでしょう。</p>

<p>20名までの利用で月間5,500円、50名までで月間22,000円となっています（上位プランあり）。単発イベント向けに1週間2,750円（20名まで）、11,000円（100名まで）などもあります。</p>

<p><a href="https://ovice.in/ja/">oVice - Business Metaverse</a></p>

<h3 id="spatialchat"><a href="https://spatial.chat/">SpatialChat</a></h3>

<p><img src="/images/articles/online-event-11.jpg" alt="" /></p>

<p>SpatialChatはoVice同様に丸いアイコン同士の距離感で音量が変わるコミュニケーションツールです。oViceのような会議室機能はなく、平面空間だけでコミュニケーションをします。</p>

<p>セッションなどを行う時にはメガホン機能を使って、全体にアナウンスができます。Webブラウザだけで利用できるのが利点です。</p>

<p>料金は頻繁に変わるので注意が必要です。先日の料金改定によって、無料プランは25名までに変更されました。1日のイベントの場合、一人2ドルとなっています。これが25名を超えた場合の料金なのか、1名からなのかは不明です。</p>

<p><a href="https://spatial.chat/">SpatialChat</a></p>

<h3 id="gather--a-better-way-to-meet-online"><a href="https://www.gather.town/">Gather | A better way to meet online.</a></h3>

<p><img src="/images/articles/online-event-10.jpg" alt="" /></p>

<p>8ビット風のデザインが特徴なオンラインコミュニケーションツールです。oViceやSpatialChatと同じく距離や向きによって音量が変わります。Webブラウザだけで利用できます。</p>

<p>会議室を作ったり、その中でホワイトボードやゲームをしたりできるなど、かなり細かい機能があります。セッションを行う際には登壇台に移動して画面を共有するなど、細かい部分にまで気が配られています。</p>

<p>料金は無料で25名まで、その後は2ドル/2時間/ユーザー（500名まで）、3ドル/日/ユーザーなどとなっています。</p>

<p><a href="https://www.gather.town/">Gather | A better way to meet online.</a></p>

<h3 id="discord"><a href="https://discord.com/">Discord</a></h3>

<p><img src="/images/articles/online-event-9.jpg" alt="" /></p>

<p>Discordはゲーム界隈で有名なチャットサービスですが、最近はIT系でも利用が進んでいます。Slackでは提供されない音声チャットが無料で利用できるのが大きいです。専用アプリもありますが、Webブラウザだけでも利用できます。</p>

<p>画面共有を伴うイベントは25名までとなっています。Clubhouse的な音声のみのサービスStage Channelsは1,000名まで参加可能です。</p>

<p>料金は無料ですが、Discord Nitoroというサービスに個人で入れます（月間9.99ドル〜）。利用者がお金を払って便利な機能を手に入れるのが他と異なる部分です。なお、課金すると画面共有が1080p、または4Kになります。この辺りがゲーム向きの機能でしょう。</p>

<p><a href="https://discord.com/">Discord | 会話や交流が楽しめるプラットフォーム</a></p>

<h3 id="nework"><a href="https://nework.app/top">NeWork</a></h3>

<p><img src="/images/articles/online-event-7.jpg" alt="" /></p>

<p>NTTコミュニケーションズが提供するサービスです。バブルと呼ばれる枠に入ることで、会話ができます。また、自分のステータスを色で表現することで、話しかけていいか分かるようになっています。</p>

<p>バブルの枠外にいると、聞き耳モードになります。会話には参加できませんが、画面共有を見たり、会話を聞けます。複数人で同時に画面共有を行えるのが便利です。</p>

<p>サービスはWebブラウザだけで利用できます。料金は20名までは無料、50名までが月額27,500円、100名までが月額55,000円となっています。ごく小さなグループであれば無料で利用できそうです。20名の場合はゲストを呼べないので、全員登録している必要があります。</p>

<p><a href="https://nework.app/top">NeWork リアルより話しやすいオンラインワークスペース</a></p>

<h2 id="3d">3D</h2>

<p>3Dアバターを使ったコミュニケーションツールです。より没入感が感じられるものの、イベントの主体はコンテンツやコミュニケーションにあるので、3Dであることがどこまで意味を持つかは疑問です。リッチな分、負荷が高いのは難点です。</p>

<h3 id="hubs"><a href="https://hubs.mozilla.com/">Hubs</a></h3>

<p><img src="/images/articles/online-event-5.jpg" alt="" /></p>

<p>Mozillaの提供する3D空間サービスです。オープンソースなので自分でサーバーを立てることもできますし、<a href="https://hubs.mozilla.com/cloud">Hubs Cloud</a>を利用することもできます。Hubs CloudはAWSインスタンスです。</p>

<p>利用はWebブラウザだけで可能で、PWAとしてインストールもできます。1つのルームで25名程度というのが制限となっています。自分でサーバを立てる場合、強力なインスタンスを使えばもっと人数を増やせると言う話もあります。特に課金モデルはないようです。</p>

<p><a href="https://hubs.mozilla.com/">Hubs - Private, virtual 3D spaces in your browser</a></p>

<h3 id="door"><a href="https://door.ntt/">DOOR</a></h3>

<p><img src="/images/articles/online-event-4.jpg" alt="" /></p>

<p>Mozilla HubsをベースにNTTコミュニケーションズが提供するサービスです。同時参加人数は24名までとなっています。部屋を作成するツールが用意されており、自由にカスタマイズが可能です。</p>

<p>動画を配置したり、3Dオブジェクトをインポートしたりできます。アバターが使えますが、会話していても口が動かないので誰が話しているのか分からないのが欠点です。</p>

<p>現時点では明確な料金表はありません。24名までの利用であれば無料といった程度で、法人利用する場合は問い合わせが用意されています。</p>

<p><a href="https://door.ntt/">DOOR　開け。次の世界 -</a></p>

<h3 id="clusterクラスター"><a href="https://cluster.mu/">cluster（クラスター）</a></h3>

<p><img src="/images/articles/online-event-3.jpg" alt="" /></p>

<p>専用アプリやHMDを使って利用する3Dコミュニケーションツールです。様々な大型イベントでも使われているので、実績は十分にあります。あります。</p>

<p>イベントは無料で作成可能です。公開イベントの場合は500名まで、非公開イベントは50名までとなっています。画面共有はなく、PDFファイルのみ共有できます。そうした点を登壇者にも伝えておかないといけないのが注意点でしょう。</p>

<p>また、専用アプリをインストールしておく必要があるのが面倒ではあります。</p>

<p><a href="https://cluster.mu/">メタバースプラットフォーム cluster（クラスター）</a></p>

<h2 id="配信特化型">配信特化型</h2>

<p>コミュニケーションツール内に参加者、運営者が集まるのではなく、配信側と聞く側で分かれる形式の場合です。この形式の場合は下記の配信サービスと、YouTube LiveやFacebook、Twitter Live Streamingなどを組み合わせる形になるでしょう。</p>

<h3 id="streamyard"><a href="https://streamyard.com/teams/kPWTXgIk7U5n89HHnObem2N7/broadcasts">StreamYard</a></h3>

<p><img src="/images/articles/online-event-2.jpg" alt="" /></p>

<p>StreamYardは月25ドルから利用できます（年間の場合は240ドル）。同時に10人の参加者で、3件の配信先を選択できます。無料の場合は6人まで、1ヶ月20時間までという制限があります。月25ドルの場合は720p、月39ドルで1080pによる配信が可能です。</p>

<p>配信内容はローカルファイルとして保存されており、ダウンロードできます。動画にはロゴや背景の変更、YouTubeやFacebook、Twitchなどからのコメントピックアップといった機能があります。</p>

<p><a href="https://streamyard.com/teams/kPWTXgIk7U5n89HHnObem2N7/broadcasts">StreamYard</a></p>

<h3 id="restream"><a href="https://www.g2.com/products/restream/reviews">Restream</a></h3>

<p><img src="/images/articles/online-event-13.jpg" alt="" /></p>

<p>RestreamもStreamYardのようにクラウドベースの配信プラットフォームになります。有料の場合は16ドルからとなっています。配信先が5チャンネル選べますが、登録自体5チャンネルまでしかできない仕組みです（StreamYardはいくつでも登録は行えます）。また、以前は有料でもロゴが消せないといった欠点がありました（現在は消せるようです）。</p>

<p>機能的にはStreamYardよりも若干多いように見えます。ただ、個人的には使いづらい印象があります。OBSやZoomと接続する機能は便利そうです。</p>

<p><a href="https://www.g2.com/products/restream/reviews">Restream Reviews 2022: Details, Pricing, &amp; Features | G2</a></p>

<h2 id="まとめ">まとめ</h2>

<p>イベントツールの選定としては、ブラウザだけで利用できるかどうかが一つ大きなポイントになります。できれば専用ソフトウェアは不要な方が良いでしょう。運営メンバーはともかく、初参加の人にとっては敷居が高くなります。</p>

<p>また、無料（または有料でも）で何人まで参加できるのかもポイントになります。イベント規模によって、収まらないケースもあるでしょう。</p>

<p>後は多機能なツールはありますが、独特な使い勝手を覚えないといけないケースも多いので注意が必要です。特に登壇者の方が不慣れな状態だと、操作するのに必死になってしまうと、せっかくのプレゼンが台無しになってしまいます。</p>

<p>こうしたサービスは正しく選定し、自分たちの目的やイベントの趣旨に合わせて選択しましょう。そうすればきっとオンラインイベントが成功するはずです。</p>

<p><a href="/contact">MOONGIFTではコミュニティ運営のサポートを提供していますので、ぜひお気軽にお問い合わせください</a>。</p>]]></content><author><name>moongift</name></author><category term="イベント" /><category term="オンライン" /><summary type="html"><![CDATA[オンラインイベントを行う際には、何らかのサービスを使うのが一般的です。企業イベントであれば予算も付くでしょうが、コミュニティの場合はなるべく安価なツールを選びたいでしょう。]]></summary></entry><entry><title type="html">パネルディスカッションでの良いモデレーションとは？</title><link href="https://devrel.jp/%E3%83%91%E3%83%8D%E3%83%AB%E3%83%87%E3%82%A3%E3%82%B9%E3%82%AB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/2022/03/21/good-panel-discussion.html" rel="alternate" type="text/html" title="パネルディスカッションでの良いモデレーションとは？" /><published>2022-03-21T09:00:00+09:00</published><updated>2022-03-21T09:00:00+09:00</updated><id>https://devrel.jp/%E3%83%91%E3%83%8D%E3%83%AB%E3%83%87%E3%82%A3%E3%82%B9%E3%82%AB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/2022/03/21/good-panel-discussion</id><content type="html" xml:base="https://devrel.jp/%E3%83%91%E3%83%8D%E3%83%AB%E3%83%87%E3%82%A3%E3%82%B9%E3%82%AB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/2022/03/21/good-panel-discussion.html"><![CDATA[<p>最近、イベントをパネルディスカッション形式で行うことが増えています。その際、モデレーターを担当するのですが、意外と進行を褒めてもらえることが多いです。</p>

<p>逆にモデレーターをうまく行うコツを聞かれることが増えてきたので、自分なりのやり方をまとめておきます。</p>

<h2 id="個人的な経験">個人的な経験</h2>

<p>私が最初にパネルディスカッションでモデレーターを担当したのはCROSS 2015の<a href="https://web.archive.org/web/20160321151348/http://2015.cross-party.com/program/d3">Webエンジニアなら抑えておきたい最近のOSS事情</a>だったようです（Internet Archiveより）。その後、CROSSで何回かと、DevRel Meetup in TokyoやDevRel/Asia 2020、DevRel/Japan 2021などのカンファレンスで担当したり、このコロナ禍になってからオンラインイベントの幾つかでモデレーターを担当しています。</p>

<p>動画で残っているものとしては以下の通りです。</p>

<ul>
  <li><a href="https://www.youtube.com/watch?v=i_TIWPaqAMg">DevRel Practices from Japan to Asia/Global by 寺尾 英作さん/千代田まどか (ちょまど)さん/吉澤穀さん - YouTube</a></li>
  <li><a href="https://www.youtube.com/watch?v=p9MMl6Yu00w">日本企業によるDevRel 【DevRel/Japan CONFERENCE 2021】 - YouTube</a></li>
  <li><a href="https://www.youtube.com/watch?v=QDP2SycaAFs&amp;t=10s">Language Night vol.1 〜スクリプト言語〜 - YouTube</a></li>
  <li><a href="https://www.youtube.com/watch?v=Vsly03eJSZc">Language Night vol.2 〜コンパイル型言語〜 - YouTube</a></li>
</ul>

<h2 id="セッションとパネルディスカッションの違い">セッションとパネルディスカッションの違い</h2>

<p>まず通常のセッション形式とパネルディスカッションの違いを解説します。</p>

<table class="table">
  <thead>
    <tr>
      <th>形式</th>
      <th>時間</th>
      <th>登壇</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>セッション</td>
      <td>15〜30分</td>
      <td>1〜2人</td>
    </tr>
    <tr>
      <td>パネルディスカッション</td>
      <td>60〜90分</td>
      <td>4〜5人</td>
    </tr>
  </tbody>
</table>

<p>セッションの場合は1〜2人の登壇者に対して、あらかじめ決めた時間の範囲で自由に喋ってもらいます。パネルディスカッションの場合は、人数はもう少し多めで、テーマに沿って順番に喋る形式です。</p>

<p>この違いがどんな意味を生むでしょうか。</p>

<h3 id="虚無に向かって喋るセッションと人と語り合うパネルディスカッション">虚無に向かって喋るセッションと、人と語り合うパネルディスカッション</h3>

<p>先日freeeさんのブログ記事<a href="https://developers.freee.co.jp/entry/freee-tech-night-83-reflections">技術イベント（freee Tech Night）開催の反省＆失敗体験 83選</a>にて、指摘がありました。</p>

<blockquote>
  <p>24. 登壇しづらそう、虚無に向かって発表するやつ、反応が見られない</p>

  <p>オフラインイベントのように資料を用意して、一人で話す登壇スタイルだと難易度が高いと考えました。 ここ最近では登壇スタイルのオンラインイベントはfreeeの内外でも色々な所で行われていますが、当時懸念点が上がったのは自然な流れでした。</p>

  <p>当時は全くの未知だったのでやりやすい方法で進めたいと考えました。私が司会というかオーガナイザーになってパネルディスカッションというか雑談のような形式で技術の話をするというスタイルです。これは今でも同様のスタイルで配信しています。</p>
</blockquote>

<p>これはまさにその通りで、画面に向かって15〜30分も喋り続けるのはかなりしんどいです。スライドをプレゼンテーションモードにすると画面いっぱいにスライドが表示されて、参加者の反応も見えません（最近はウィンドウモードもありますが、似たようなものです）。オーディエンスの反応が分からないプレゼンほど、やっていて意義を感じないものはありません。</p>

<p>パネルディスカッションの場合は、少なくともモデレーターとのコミュニケーション、そしてパネリスト同士のコミュニケーションが発生します。孤独な登壇にはなりません。これだけでも登壇者の心の安らぎが違います。</p>

<h3 id="喋る時間の割り当て">喋る時間の割り当て</h3>

<p>セッションの場合は与えられた時間をすべて自分の時間にできます。ポジティブに言えば全時間を独占できますが、ネガティブに言うと15〜30分喋り続けないといけません。オフラインの場合は途中で水を飲むのも苦ではなかったのですが、最近ではそうした行為さえ避けてしまいます。つまらない時間があると、あっと言う間に接続を切られてしまうのではないかとビクビクしてしまいます。</p>

<p>オフラインイベントの時には、椅子にある程度の拘束力がありました。よほど酷いプレゼンでもない限り、途中退室する人は少なかったでしょう。それに対してオンラインの場合は、クリック一つで簡単に会場から抜けられます。YouTubeで配信している場合は、後からでも見られる安心感（？）で、あっと言う間に観客がいなくなります。</p>

<p>パネルディスカッションの場合はトータルで60〜90分などですが、パネリストごとに割ると一人あたりの時間は15〜20分程度です。しかもそれはテーマごとに細切れの時間です。万一一人が面白くなかったとしても、次の人にトークが移れば面白い内容になるでしょう。つまらない時間が15分続くと苦痛ですが、1テーマごとに一人が喋る時間はせいぜい2〜3分なので、我慢する時間はさほど長くありません。</p>

<h2 id="パネルディスカッションのメリット">パネルディスカッションのメリット</h2>

<p>ここから、個人的に考えるパネルディスカッションのメリットです。</p>

<h3 id="登壇する敷居が低い">登壇する敷居が低い</h3>

<p>セッションの場合、登壇者は資料を作る必要があったり、得られの部分を考えたりと負担が大きいのが実情です。それに対して参加者の反応も薄く、感じづらいのでは登壇メリットが感じづらいでしょう。</p>

<p>それに対してパネルディスカッションの場合は、資料を用意する必要はなく（自己紹介スライドくらいは必要かも知れません）、コンテンツ（テーマ）はモデレーターが考えてくれます。用意する手間がセッションに比べて大幅に低いのが利点です。そのため、適切なイベントテーマであれば、登壇を断られる可能性が大幅に低いです。</p>

<h3 id="ライブ感がある">ライブ感がある</h3>

<p>セッションの場合、その内容は始まる前に決まっています。スライドは事前に作られており、トークスクリプトも出来上がっています。実は録画を流しても気付かないかも知れません。これはオンラインイベントになると、特に顕著です。</p>

<p>なぜこうなるかと言うと、セッション形式の場合スピーカーは事前に用意された時間を完璧に使おうとするからです。与えられた20分（たとえば）を、すべて使い切って参加者のためになる話をしようと考えるからです。そうなると、イベントツールに流れてくるコメントやツイートに対応している余裕なんてありません。</p>

<p>私が行うパネルディスカッションの場合、積極的にツイートやコメントを拾っていきます。時間管理は後述しますが、バッファーを見ながら行っていきます。コメントを拾うことで、参加者は参加意識が高まり、より多くのコメントを促せます。そうすれば、オンラインイベントであっても盛り上がり感をえんしゅつできる演出できるでしょう。</p>

<h2 id="モデレーションのコツ">モデレーションのコツ</h2>

<p>では、ここからは実際にモデレーションを行う上でのコツを解説します。</p>

<h3 id="相手テーマを理解する">相手、テーマを理解する</h3>

<p>まずパネリストの方たちや、イベントのテーマを理解しましょう。パネリストを理解せずに、良いモデレーションは絶対にできません。たとえばパネリストについて、以下の情報をチェックします。</p>

<ul>
  <li>ソーシャル</li>
  <li>最近のツイート</li>
  <li>ブログ</li>
  <li>著書</li>
  <li>最近の登壇</li>
</ul>

<p>こういった情報をチェックして、その人が最近どんな技術に注目しているか、どんなニュースに反応したか、個人的なアップデートがあるのかを把握しておきます。個人的なアップデート（引っ越した、転職した、ブログ記事を書いたなど）は自己紹介のフェーズで軽く触れたりします。</p>

<p>人は自分に興味を持ってくれる人に対して好感を持ちます。その逆に相手が自分のことを知らない、または知ろうとしていないことが分かると、途端に冷めた対応になるものです。</p>

<p>テーマについてもそうです。自分に全く関係のないテーマの場合は、そもそもモデレーションを請けないのが一番です。しかし、自分と関連しているテーマであっても、最近のアップデートなどはきちんと下調べしておきます。パネルディスカッションでは予期せぬ方向に話が飛んだり、キーワードが出てくることがありますが、それを知らないと不勉強なモデレーターという烙印が押されます。その分野のスペシャリストであるパネリストの知識に追いつくのは難しいですが、ある程度事前学習はしなければなりません。</p>

<h3 id="狭いテーマにしすぎない">狭いテーマにしすぎない</h3>

<p>パネルディスカッションのテーマ感は大切です。あまり範囲が広いテーマはよくありませんが、絞り込み過ぎるのも駄目です。絞り込み過ぎて、対象になるパネリストが特定の人しかいない状態になると、意見も似通ったものになります。そうすると、最初の人が答えたのがすべてで、膨らませるのが難しいでしょう。また、それで複数の質問を展開するのも難しいです。</p>

<p>あるテーマを考えた時に、それぞれの立場から話せる人を3〜4人想定できるのがベストです。パネリストは「かくあるべき」を語る訳ではありません。これはセッション形式です。パネリストは「自分の経験によるオピニオン」を話してもらいましょう。「かくあるべき」を語るパネリストを集めると、パネリスト同士の意見が戦ってしまうかも知れません。</p>

<h3 id="プロレスにしない">プロレスにしない</h3>

<p>似たようなパネリストだけを集めてもパネルディスカッションは盛り上がりません。最初のパネリストが答えた内容がすべてになってしまうからです。やはりパネリストは少しずつ経験やバックグラウンドの異なる方に登壇してもらうのが良いでしょう。そして、似たような人たちを集めると、周囲がプロレス（パネリスト同士の戦い）を期待したりします。</p>

<p>オフラインの場合はプロレスでも大丈夫かも知れません。マイクが複数あっても、聞き苦しくないからです。さらに互いの表情や仕草がよく見えるので、あくまでも台本通り、お互い納得ずくで行われたりします。</p>

<p>しかしオンラインの場合はマイクが一つしかないため、一人が独占していると他の人が割り込めません。割り込んでしまうと、とても聞き苦しいものになります。また、感情的になるとついつい話す時間が長くなったり、相手の意見を無理矢理遮ってしまうでしょう。そうなると、とても良いパネルディスカッションとは言えなくなります。</p>

<p>そうならないために、モデレーターは意見対立を煽ったり、プロレス形式に組み立てるべきではないと考えます。パネリストの方同士の良好なディスカッションを作り出し、彼らにも登壇して良かったと思ってもらうのが一番です。</p>

<h3 id="時間管理を適切に行う">時間管理を適切に行う</h3>

<p>モデレーターの大事な役割の一つが時間管理です。たとえば事前に用意した3つのテーマについて話す場合を想定します。この場合、スケジュールは次のようになります。</p>

<ol>
  <li>パネリスト紹介</li>
  <li>テーマ1</li>
  <li>テーマ2</li>
  <li>テーマ3</li>
  <li>参加者からの質問</li>
</ol>

<p>最初にパネリストを紹介する時間を設けます。日本人パネリストの場合、自己紹介は2分も見ておけば十分でしょう。そこにモデレーターから1つくらい質問をしたとして、一人3分あれば大丈夫です。パネリストが3〜4人であれば9〜12分になります。イベントが90分であれば、残りは78〜81分になります（60分なら48〜51分です）。</p>

<p><img src="/images/articles/time-management.jpg" alt="" /></p>

<p>そして残りを4分割すると、90分のイベントの場合は約20分/テーマ、60分の場合は約12分/テーマになります。さらにパネリストの人数が3人だったら、一人あたり5分（90分イベント）または3分（60分イベント）と考えられます。少しバッファーがあるのはモデレーターから質問をしたり、パネリストから別なパネリストへ質問する時間です。こう考えると、意外と時間は短かったりします。パネリストの人が少し喋りすぎるだけであっと言う間に時間がなくなります。</p>

<p>なお、外国人パネリストの場合は自己紹介すら長い傾向があります。一人あたり5分程度は考えておくと良いでしょう。</p>

<h3 id="質問しよう">質問しよう</h3>

<p>事前に決めた質問に対してパネリストが答えるのは当たり前で、それをパネリストの人数だけ繰り返すのではイベントは面白くありません。モデレーターはパネリストの意見をしっかり聞いて、質問を投げかけましょう。</p>

<p>質問するタイミングはモデレーターによりますが、パネリストが答えたタイミングで個別に行うか、全員答え終わった後に行うことになるでしょう。個人的には記憶が新鮮な内の方がパネリストも答えやすいと思うので、随時質問を差し込むようにしています。ただし、時間管理の観点からはさらに一人あたりの持ち時間が長くなりがちなので注意が必要です。</p>

<h3 id="話しすぎない">話しすぎない</h3>

<p>パネルディスカッションの主役はあくまでもパネリストです。ついついモデレーターが自分の体験や意見を言いたくなることもありますが、そこはぐっと堪えましょう。ツッコミ程度ならば良いですが、モデレーターはパネリストではないことを把握しましょう。</p>

<p>モデレーターの役割は以下の通りです。</p>

<ul>
  <li>パネリストが話しやすい雰囲気を作る</li>
  <li>参加者が質問しやすい雰囲気を作る</li>
  <li>滞りない進行を行う</li>
</ul>

<p>パネリストからさらなる意見を引き出すために質問を投げかけるのは良いことです。しかし、もし参加者から別な質問が来ているならばそちらを優先する方が良いでしょう。</p>

<h2 id="事前質問を設定しよう">事前質問を設定しよう</h2>

<p>出たとこ勝負のパネルディスカッションは危険です。参加者からの質問はむしろ予期せぬものが出てくる方が面白いかも知れません。しかし、そこに至るまでの道筋はモデレーターとして整えてあげる方が良いでしょう。</p>

<p>そのため、私がモデレーターを務める場合には事前質問をパネリストに対して共有しています。この質問を適切に設定することで、パネルディスカッション全体がうまくいくかどうか決まってくるでしょう。</p>

<h3 id="答えを決めつけない">答えを決めつけない</h3>

<p>当たり前ですが、YES/NOで答えるような質問を設定してはいけません。質問に対してパネリストが答えた時に、話を膨らませられるのが良いテーマです。答えが決まっているような質問だとパネリスト同士の意見の違いが出づらいでしょう。それでは多様性が見いだせず、話が膨らみません。パネリストが別な人の答えを聞いた時に「そういう考え方もあるのか」と思ってもらえるのがベストです。</p>

<h3 id="余分に考えておく">余分に考えておく</h3>

<p>パネルディスカッションの時間管理はとても難しく、思いのほか早く進んでしまうこともあるでしょう。そうなった時のために、質問事項は余分に考えておきましょう。パネリストの方にはタイムスケジュール次第では取り上げないことがある、質問リストの上から優先順位が高いと説明しておくと良いでしょう。</p>

<p>余分に考えておけば、参加者からの質問が来なかった時の時間稼ぎとしても使えます。</p>

<h3 id="パネリスト自身の言葉で語れるものを用意する">パネリスト自身の言葉で語れるものを用意する</h3>

<p>もしかするとパネリストの選定に関係するかも知れません。事前に質問を共有した時に「社内に確認しておきます」といった連絡をもらった時には要注意です。回答は完璧かも知れません、しかしその回答に質問しても答えられない可能性が高いです。自分の言葉で回答できないパネリストは、パネリスト向きではない、または事前質問が良くない可能性があります。</p>

<h2 id="tips">Tips</h2>

<h3 id="コメントを随時拾う">コメントを随時拾う</h3>

<p>実際にパネルディスカッションを進行する際には、参加者からの質問やコメントが飛び交っているのが理想と言えます。リアルでパネルディスカッションを行う場合、最初に事前質問に合わせた内容を行った後、質問タイムをもうけることが多かったかと思います。この時、参加者は聞くモードから質問するモードに突然頭を切り替えないといけません。これで良い質問が矢継ぎ早に出てくると期待するのが間違っています。</p>

<p>オンラインの場合、質問をYouTubeコメントやTwitter、Zoomのコメントなどに投稿してもらうと良いでしょう。そして、それを適宜拾いながらパネルディスカッションを行うと良いと思います。そうすることで、参加者が疑問に思ったタイミングで質問を投稿できるようになります。なお、コメントを拾う際には投稿者の名前を読んだり、コメントに対するお礼を忘れずに。コメントしてくれて嬉しいという気持ちをちゃんと表現しましょう。</p>

<h3 id="話す順番に気をつける">話す順番に気をつける</h3>

<p>答えてもらう順番ですが、私の場合は自己紹介は個人名や社名の昇順など理由が説明しやすい順番にしています。表立って言われることはありませんが、パネリストの中にはなぜ自分が最後なのかと気にする方がいるかも知れません。そうしたちょっとしたストレスを取り除くことで、スムーズな進行につながります。</p>

<p>そしてテーマごとに最初に発言する方を一人ずつずらします。そうすることで、自分の意見が言われてしまったという経験を少なくできます。常に同じ順番で喋っていると、最初の人の方が新鮮な意見を出せて、徐々に補足的なものになってしまうでしょう。それでは毎回最後に発言する方は、発言しづらくなってしまいます。</p>

<h2 id="まとめ">まとめ</h2>

<p>パネルディスカッションは個人的にも参加感が強く感じられるので面白いです。また、セッション形式と比べて参加者の反応が分かりやすいので、登壇される方にとっても嬉しいかと思います。</p>

<p>モデレーションを苦手としている方も意外と多そうなので、ぜひ参考にしてください。</p>

<p><a href="/contact">MOONGIFTではコミュニティ運営のサポートを提供していますので、ぜひお気軽にお問い合わせください</a>。</p>]]></content><author><name>moongift</name></author><category term="パネルディスカッション" /><category term="イベント" /><summary type="html"><![CDATA[最近、イベントをパネルディスカッション形式で行うことが増えています。その際、モデレーターを担当するのですが、意外と進行を褒めてもらえることが多いです。]]></summary></entry><entry><title type="html">エラーメッセージから考えるよりよいDX（開発体験）とは</title><link href="https://devrel.jp/dx/2021/12/19/error-with-dx.html" rel="alternate" type="text/html" title="エラーメッセージから考えるよりよいDX（開発体験）とは" /><published>2021-12-19T09:00:00+09:00</published><updated>2021-12-19T09:00:00+09:00</updated><id>https://devrel.jp/dx/2021/12/19/error-with-dx</id><content type="html" xml:base="https://devrel.jp/dx/2021/12/19/error-with-dx.html"><![CDATA[<p>開発していれば、自然と疑問が出てくるものです。SaaSをはじめ、APIベースでサービスを提供する場合、サーバ側で何が行われているかはブラックボックスになります。エラーが出たとしても、コードを追いかけながら確認することはできません。</p>

<p>よりよい開発体験（DX）を提供するためには、次の観点が必要です。</p>

<ul>
  <li>ユーザ環境に近いこと</li>
  <li>レスポンスが早いこと</li>
  <li>コミュニケーションが少ないこと</li>
</ul>

<p>この観点から、優れたサポートが何なのか解説します。</p>

<h2 id="原因と対応が明確なエラーメッセージ">原因と対応が明確なエラーメッセージ</h2>

<p><strong>数分</strong></p>

<p>まずユーザ環境だけで解決するのが一番良いです。例えばSDKを使っている場合、SDKの中でエラー判定をし、処理をクラウド側に送る前にエラーメッセージを出せるようにします。必須項目漏れなどのエラーがこれに該当します。</p>

<p><code class="highlighter-rouge">Something wrong</code> は最もだめなエラーメッセージです。かつてPerlをCGIで動かすと、Internal Server Errorしか返ってこない時代がありました。この時にはデバッグが本当に大変で、コードを一つ一つ確認しながら解決していました。その後、エラーが起きた行数やトレースができるようになり、開発効率は大幅に向上しています。</p>

<p>APIでも同様に、ただ単にエラーですと出すのではなく、何のエラーなのかを明確にしなければなりません。さらに、そのエラーを回避する方法についてもメッセージを出すべきです。開発者はエラーメッセージを読んで修正を行ったり、必要があればメッセージに記載されたURLを開いて詳細を確認できます。</p>

<p>開発元に問い合わせることなく、ユーザ自身ですぐに解決できるのがベストです。なお、エラーメッセージを独特なものにしておくのもコツです。例えばOracleのエラーIDは常にORA-9999といった形式なので、エラーIDで検索すると検索で見つかりやすくなります。汎用的なエラーメッセージはかえって情報が増加し、探しづらくなる可能性があります。</p>

<h2 id="エラーメッセージでドキュメントを記載する">エラーメッセージでドキュメントを記載する</h2>

<p><strong>10分程度</strong></p>

<p>エラー内容がよく分からない場合、開発者はそのエラーメッセージでWeb検索するでしょう。そうした時に備えて、ドキュメント（またはブログ）で解説しておきます。</p>

<p>この時、エラーメッセージ一覧表を用意するだけでは意味がありません。こうしたエラーメッセージ一覧表は、<code class="highlighter-rouge">NOT_FOUND</code> を <code class="highlighter-rouge">リソースがない</code> といった単に日本語化しただけの場合が多くなります。開発者が知りたいのはエラーを解決法であって、その意味ではありません。どうしたらエラーを回避できるのか、どういった修正を行えば良いのかを記事化する必要があります。</p>

<h2 id="qaサービスを使う">Q&amp;Aサービスを使う</h2>

<p><strong>数時間〜回答なし</strong></p>

<p>Web検索で思ったような答えが見つからない場合、開発者はQ&amp;Aサービスを使うでしょう。例えばTeratail、Stack overflowまたは独自のフォーラムなどです。</p>

<p>Q&amp;Aサービスは善意の回答者が現れないと答えの得られないサービスです。すぐに答えが返ってくるかもしれませんが、永遠に返ってこないかもしれません。開発者は質問を投稿しますが、答えが来るまで黙って待っていられる訳ではないでしょう。そのため自己解決の道は模索しつつ、Q&amp;Aによる答えを待つのが普通です。</p>

<p>Q&amp;Aサービスは同じような課題に対して、2番目以降の人たちにとって役立つサービスになります。先進的な人たちは常に答えのない中、さまようことになるでしょう。</p>

<p>オープンなQ&amp;Aサービスの場合、ある程度汎用的に聞く必要があります。自分たちのワークフローに寄りすぎていると、回答できる人も少なくなってしまうでしょう。エラー原因がよく分かっていない場合、質問すらできないかもしれません。</p>

<h2 id="公式のサポートを頼る">公式のサポートを頼る</h2>

<p><strong>数時間〜数日</strong></p>

<p>Q&amp;Aと前後して、公式のサポートを利用する開発者もいるでしょう。多くの場合、公式サポートは有償ユーザー向けに提供されます。また、チケットなどもあり、いつでも何でも使える訳ではありません。そのため、ある程度厳選して利用することでしょう。</p>

<p>公式サポートの場合、1対1で提供されるものが多いです。また、契約によっては詳細なワークフローに関係するものであったり、実際のソースコードを見せながら回答をもらえます。</p>

<p>公式サポートは契約次第ですが、翌営業日中の回答などというケースがあります。また、確実な回答ではなく、調査中といったステータスの報告である場合もあるでしょう。必ず解決できるとは限らないのはQ&amp;Aサービスと同じくらいです。</p>

<h2 id="ソースコードをあたる">ソースコードをあたる</h2>

<p><strong>数時間〜不明</strong></p>

<p>SDKがオープンソース・ソフトウェア（またはソースコードが開示されている）の場合、実際のコードを見ながらエラー原因を探れます。大型なSDKの場合、ファイルや役割が細かく分担されているため、一目でエラーが分かることはないでしょう。また、JavaScriptのように難読化されていると、さらにコードを追いづらくなります。</p>

<p>とはいえ、ブラックボックスになっているSDKよりは幾分扱いやすいはずです。もちろんSDK側のコードを調べても、結局API側のエラーで何も分からなかったという結論になることもあります。</p>

<h2 id="エラーが回避できない場合">エラーが回避できない場合</h2>

<p>もし開発者が皆さんのサービスを使っていて、エラーをどうしても回避できなかったらどうするでしょうか。まずサービスの利用を止めるはずです。そして代替サービスの利用を検討するでしょう。</p>

<p>最も良くないのは「このサービスは難しい・利用しない方が良い」という印象を与えてしまうことです。一度与えてしまったネガティブな印象を払拭するのは困難です。</p>

<ol>
  <li>すでにエラーを解決できなかったというネガティブな経験がある</li>
  <li>回避できる手段を公開したとしても、それを届ける手段がない</li>
</ol>

<p>一度サービスから離れてしまった開発者を取り戻すのは、ほぼ不可能です。もしもう一度類似技術の導入検討を行う必要があったとしても、検討の土俵に上げてもらえることはないでしょう。</p>

<h2 id="まとめ">まとめ</h2>

<p>開発時にエラーは付きものです。エラーなく開発が終わることは100%ありません。重要なのはエラーが出た後に、どう素早く解決できるかになります。素早く自己解決できれば、開発者はあなたのサービスに対して、ポジティブな印象を持つことでしょう。</p>

<p>大事なのは、ユーザの利用している環境に近いこと、セルフサポートできること、短時間で解決できることです。その観点からサービスやSDKのエラーメッセージを設計すると、よりよい開発体験の実現につながることでしょう。</p>]]></content><author><name>moongift</name></author><category term="DX" /><summary type="html"><![CDATA[開発していれば、自然と疑問が出てくるものです。SaaSをはじめ、APIベースでサービスを提供する場合、サーバ側で何が行われているかはブラックボックスになります。エラーが出たとしても、コードを追いかけながら確認することはできません。]]></summary></entry><entry><title type="html">マーケティングから考えるDevRel戦略（発信編）</title><link href="https://devrel.jp/%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/2021/12/04/devrel-publishing.html" rel="alternate" type="text/html" title="マーケティングから考えるDevRel戦略（発信編）" /><published>2021-12-04T09:00:00+09:00</published><updated>2021-12-04T09:00:00+09:00</updated><id>https://devrel.jp/%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/2021/12/04/devrel-publishing</id><content type="html" xml:base="https://devrel.jp/%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/2021/12/04/devrel-publishing.html"><![CDATA[<p>マーケティングが何かというと、幾つかの答えがあるようです。</p>

<ol>
  <li>製品やサービスに関する情報を真に必要とする顧客へ届ける</li>
  <li>宣伝せずに売れるための仕組みを作る</li>
</ol>

<p>たぶんこのあたりがよく聞くところかと思います。そこで、この考え方をDevRelに適用した時にどんな戦略が取り得るのか考えてみます。今回は特に発信にフォーカスします。</p>

<h2 id="適切なチャネルを使った適切な発信">適切なチャネルを使った適切な発信</h2>

<p>マーケティングでは製品やサービスに関する情報を発信し、顧客に届ける必要があります。Googleにない情報は存在しないのと同義と言われるのと同じく、情報が届いていない製品は存在しないのと同じことです。</p>

<p>情報の発信方法として、従来では広告が一般的に行われてきました。チャネルは時代に合わせて変化していますが、概ね次のようなマスメディアが多かったと思います。</p>

<ul>
  <li>テレビ</li>
  <li>ラジオ</li>
  <li>新聞</li>
  <li>雑誌</li>
</ul>

<p>そこに新しいチャネルとしてインターネットが入ってきました。しかし、インターネットの場合はセグメントが細かく決められるので、全体としてはマスメディアである一方、対象はより細かくピンポイントに絞って届けられるのが利点です。配信対象を狭められれば、費用対効果が高くなります。</p>

<p>なお、現在Appleをはじめとして広告トラッキングへ反対する動きが高まっています。トラッキングが防止されれば、セグメントがぼやけてしまい、費用対効果は悪化するでしょう。</p>

<h3 id="対開発者で考える">対開発者で考える</h3>

<p>開発者は他の職種に比べるとコンピュータの利用時間が長く、インターネットサービスの利用率も高い傾向にあります。その結果、普段から浴びるように広告と触れ続けています。その結果、広告を単なるノイズとして捉えるようになり、自然とフィルタリングするようになります。</p>

<p>そのため、対開発者サービスにおいてインターネット広告は費用対効果が悪く、成果が得づらいものになっています。これはインターネット広告ビジネスが伸びれば伸びるほど、悪化していくことでしょう。</p>

<p>そこでDevRelでは発信チャネルとして、別なものを考えなければなりません。</p>

<h2 id="チャネルのカテゴリ">チャネルのカテゴリ</h2>

<p>チャネルを雑多に挙げていくとキリがないので、カテゴリごとに考えましょう。</p>

<p>インターネットで扱えるコンテンツ（メディア）は次の通りです。</p>

<ul>
  <li>テキスト</li>
  <li>画像</li>
  <li>音声</li>
  <li>動画</li>
</ul>

<h3 id="テキスト">テキスト</h3>

<p>テキストコンテンツの筆頭に挙げられるのがブログです。ドキュメントよりは手軽で、気軽に発信できるツールでしょう。自社ブログであれば、発信責任は自分たちにあり、責任範囲が最も広く自由度が高くなります。</p>

<p>ブログよりも更新頻度を落とす代わりに、より適切な内容が求められるのがドキュメントになります（ブログが適当で良いという訳ではありません）。APIドキュメントやチュートリアル、ヘルプドキュメントなどが該当します。</p>

<p>もう少し責任範囲を絞るとQiitaやZennといったサービスになるでしょう。外部サービスの場合は掲載して良い情報に制限がありますので、適したコンテンツを発信する心がけましょう。</p>

<p>さらに絞ると、外部のメディア（商用メディアなど）になります。外部のメディアに企画を持ち込む場合、その技術カテゴリーに対する深い知見や概要を適切に把握していなければなりません。しかし、そうした発信ができれば、自社やサービスをその市場における権威として認識づけられるようになります。</p>

<p>DevRelに限っていえば、ソースコードも大きなテキストコンテンツの一つになります。デモアプリ、Kitchen Sink（機能を網羅したデモアプリ）、ライブラリやSDKなどが含まれます。実際に動くソフトウェアのコードは、サービスの利用方法について学ぶ上で大事な資料になります。</p>

<h3 id="画像">画像</h3>

<p>画像というとInstagramやPinterestを思い浮かべますが、こと開発者向けにおいて有効活用されている画像系サービスは皆無な気がします。Appleのように一般消費者向けに発信するには最適ですが、開発者には向かないでしょう。</p>

<p>もしあるとすれば、スライド共有サービスにおける画像としてのスライドでしょう。SlideshareやSpeakerDeckのようなスライド共有サービスでは、アップロードしたスライドを画像に変換した上で表示します。多くのサービスではテキスト化もしてくれるので、スライドをWeb検索で見つけやすくなります。</p>

<h3 id="音声">音声</h3>

<p>音声の場合は、さらに2つに分けて考えられるでしょう。</p>

<ul>
  <li>リアルタイム</li>
  <li>アップロード</li>
</ul>

<p>リアルタイムな音声発信としてはTwitter SpacesやClubhouseを使った発信が考えられます。音声だけなので、発信側も聞く側も心理的な障壁は低い傾向にあります。</p>

<p>アップロード型としてはポッドキャスティングが考えられます。聞く側はポッドキャスティングを購読することで、より自分の好きなタイミングで聞けるようになるでしょう。開発者向けのポッドキャスティング（ネットラジオ）として有名なものは次のようなものがあります。</p>

<h3 id="動画">動画</h3>

<p>こちらもまた、リアルタイムとアップロード型の2つが考えられます。とはいえ、どちらかに特化しているものは多くないようです。動画として最も有名なチャネルはYouTubeになるでしょう。</p>

<p>リアルタイムであればYouTube LiveやTwitch、Twitter Live Streamingが挙げられます。配信した後はそのままアーカイブとして残せるので、リアルタイム配信サービスはそのまま動画配信サービスとして使われることが多いでしょう。</p>

<h2 id="ミックスする">ミックスする</h2>

<p>Twitterは通常のテキストや画像の投稿、音声のSpaces、動画のLive Streamingと幅広くサポートしています。また、ブログの中にYouTube動画を埋め込んだり、スライドを埋め込むこともできるでしょう。</p>

<p>ハンズオンはベースになるコードをアップロードしておき、それを使って動画とともに展開されます。各メディアは独立して使うのではなく、ミックスすることで相乗効果が生まれたり、再活用できます。接触的に組み合わせましょう。</p>

<h2 id="まとめ">まとめ</h2>

<p>発信は公式情報を開発者に届けるのに利用されます。開発者の心に刺されば、使ってみようと考えてくれるでしょう。開発者は1カ所にいるのではなく、様々な場所に存在します。彼らのいる場所へ、最適なチャネルを使ってコンテンツを配信するようにしましょう。</p>

<hr />

<h2 id="お知らせ">お知らせ</h2>

<p>MOONGIFTではDevRelのアウトソーシングを提供しています。ブログ執筆はもちろん、各種開発者マーケティングに関するご相談を承ります。DevRelに取り組みたいが、アイディアも人員も不足している…そんな場合はぜひ<a href="/contact">お問い合わせください</a>。</p>

<script src="/assets/js/ncmb.min.js"></script>

<script src="/assets/js/app.js"></script>]]></content><author><name>moongift</name></author><category term="マーケティング" /><summary type="html"><![CDATA[マーケティングが何かというと、幾つかの答えがあるようです。]]></summary></entry><entry><title type="html">成功するブログマーケティング10のルールを配布します</title><link href="https://devrel.jp/ebook/%E3%83%96%E3%83%AD%E3%82%B0/2021/08/20/devrel-content-marketing-guide.html" rel="alternate" type="text/html" title="成功するブログマーケティング10のルールを配布します" /><published>2021-08-20T09:00:00+09:00</published><updated>2021-08-20T09:00:00+09:00</updated><id>https://devrel.jp/ebook/%E3%83%96%E3%83%AD%E3%82%B0/2021/08/20/devrel-content-marketing-guide</id><content type="html" xml:base="https://devrel.jp/ebook/%E3%83%96%E3%83%AD%E3%82%B0/2021/08/20/devrel-content-marketing-guide.html"><![CDATA[<p>コロナ禍において、カンファレンスやEXPOのような対面文化が失われつつあります。コミュニティイベントも軒並みオンライン化されており、コミュニケーション手段が制限されていることでしょう。</p>

<p>そんな中、ブログを中心としたコンテンツマーケティングにフォーカスする企業が増えています。MOONGIFTでも、ブログ作成に関する問い合わせが増えています。</p>

<p>ブログをはじめたいけれど、どうやったら良いか分からない場合や、何に注意したら良いか分からない企業向けに「成功するブログマーケティング10のルール」というeBookを作成しました。ぜひご覧ください！</p>

<h2 id="目次">目次</h2>

<ol>
  <li>目的を決める</li>
  <li>対象を知る</li>
  <li>書く場所を決める</li>
  <li>コンテンツの種類</li>
  <li>ゴールを決める</li>
  <li>発信力を付ける</li>
  <li>レギュレーション</li>
  <li>測定する</li>
  <li>改善する</li>
  <li>その他</li>
</ol>

<p>こちらはその中の1ページです。</p>

<p><img src="/assets/images/blog-rule-10-1.jpeg" style="width:300px !important" /></p>

<h2 id="ダウンロード">ダウンロード</h2>

<p>ダウンロードがこちらのフォームに入力いただければ可能です。なお、メールマガジンの購読が必須になるのでご注意ください。</p>

<script type="text/javascript" src="//ma.moongift.co.jp/form/generate.js?id=4"></script>

<h2 id="お知らせ">お知らせ</h2>

<p>MOONGIFTではDevRelのアウトソーシングを提供しています。ブログ執筆はもちろん、各種開発者マーケティングに関するご相談を承ります。DevRelに取り組みたいが、アイディアも人員も不足している…そんな場合はぜひ<a href="/contact">お問い合わせください</a>。</p>

<script src="/assets/js/ncmb.min.js"></script>

<script src="/assets/js/app.js"></script>]]></content><author><name>moongift</name></author><category term="eBook" /><category term="ブログ" /><summary type="html"><![CDATA[コロナ禍において、カンファレンスやEXPOのような対面文化が失われつつあります。コミュニティイベントも軒並みオンライン化されており、コミュニケーション手段が制限されていることでしょう。]]></summary></entry><entry><title type="html">簡単に分かるDevRel戦略</title><link href="https://devrel.jp/%E6%88%A6%E7%95%A5/%E3%83%96%E3%83%AD%E3%82%B0/2021/03/24/devrel-as-business.html" rel="alternate" type="text/html" title="簡単に分かるDevRel戦略" /><published>2021-03-24T09:00:00+09:00</published><updated>2021-03-24T09:00:00+09:00</updated><id>https://devrel.jp/%E6%88%A6%E7%95%A5/%E3%83%96%E3%83%AD%E3%82%B0/2021/03/24/devrel-as-business</id><content type="html" xml:base="https://devrel.jp/%E6%88%A6%E7%95%A5/%E3%83%96%E3%83%AD%E3%82%B0/2021/03/24/devrel-as-business.html"><![CDATA[<p>DevRelは企業の事業活動の一環として行われます。この点がコミュニティやオープンソース・ソフトウェアの開発とは異なります。そして活動範囲は大きく分けて3つに分類されると考えられます。</p>

<ol>
  <li>認知獲得から利用開始まで</li>
  <li>利用開始から促進</li>
  <li>求人、広告費用の低減</li>
</ol>

<h2 id="認知獲得から利用開始まで">認知獲得から利用開始まで</h2>

<p>DevRelが得意とする範囲として、認知度の獲得が挙げられます。マーケティングのAARRRモデルで言う最初のAAであるAcquisition（新規ユーザー獲得）とActivation（利用開始）に相当する部分です。DevRel版AARRRモデルであるAAARRRPモデルに当てはめると最初のA（Awareness：認知する）も含まれます。ハッカソンや登壇、セミナーなどを通じてまず知ってもらう、体験してもらう、ユーザ登録してもらうまでのフェーズになります。</p>

<p>知ってもらうのがなぜ大事かというと、知らないとそのユーザは他社の類似サービスを利用するからです。開発者の数は有限であり、一つのサービスを採用したら別なサービスを選択しないでしょう。あえてプロジェクトの中でRuby on RailsとDjangoとLaravelを組み合わせたりしないでしょう。特に開発者向けのサービスはプロジェクトの中に組み込まれると、よほどのことがない限り載せ替えをしません。あるサービスにとっての1ユーザ獲得は、他のサービスにとっての-1なのです。</p>

<p>知ってもらった上で選ばれないとしたら、それはサービス側の問題です。機能や価格、ドキュメント、UIなどが問題なのかも知れません。それはそれで大きな問題ですが、まず知らないと選定の土俵にすら上げてもらえません。その状態を避けるべきです。</p>

<h2 id="利用開始から促進">利用開始から促進</h2>

<p>利用開始から別なフェーズがはじまります。ここは主にサポートやカスタマーサクセスの分野になります。また、ドキュメントや管理画面の使い勝手なども大きな要素になります。使い始めてから何か違うと感じて離れてしまうと、実は知らない時以上に大きなマイナスにつながる可能性があります。つまり一旦失望してしまった、ネガティブな印象をぬぐい去るのは大変だからです。顧客との関係性で言えば、マイナスになってしまった状態です。知ってもらうからには良い印象を持ち続けてもらう必要があります。</p>

<p>困った、と感じてしまう状態にならないのがベストです。しかし、すべてのユースケースを全方位的に予期するのは不可能です。そのため、困った状態になるのは当たり前だと考えるべきです。その上で困った状態からいかに素早く、軽やかに解決に導けるかが大きな課題になります。それは画面のエラーメッセージで、セルフサポートできる仕組みかも知れません。困った時にWeb検索して解決できるようにコンテンツを用意することかも知れません。さらにQ&amp;Aフォーラムやメール、電話でのサポートかも知れません。</p>

<p>利用が進むと課金のフェーズになります。利用量や機能によって課金される場合、この最初の課金が大きな壁になります。1円と500円に大きな差はありませんが、0円と1円には非常に大きな壁があります。特にデジタルの世界においては費用が目に見えづらく、課金を嫌がる声が強いのは間違いありません。この課金部分はDevRelよりもビジネスモデルが大きく関わることでしょう。</p>

<p>一旦課金されたユーザにおいては、カスタマーサクセスによる手厚いサポートが提供されます。アップセル（さらなる高機能版への移行）とクロスセル（別な製品と組み合わせる）が主な手段になります。企業がサービスを利用する場合、それが彼らのビジネスを拡大させたり、費用を低減するのに利用されます。そこでアップセル・クロスセルを通じてさらなる利益拡大、費用減少が狙えるならば、課金を拡大するのを躊躇する理由はないでしょう。</p>

<p>このフェーズで起きる問題は課金額の低減です。つまり他社サービスに流れたり、顧客のサービスが縮小している場合に起こります。この点をフォローアップできるのもカスタマーサクセスの責任範囲になるでしょう。</p>

<h2 id="求人広告費用の低減">求人、広告費用の低減</h2>

<p>DevRelによる認知度拡大と、顧客満足度向上による紹介（リファラル）が増えると、新規獲得コストや宣伝コストが下がります。DevRelにおいては広告は信用度を下げていますので、利用者自身の声とエバンジェリスト・アドボケイトによる開発者目線の声の方が届きやすくなります。DevRelに取り組む人事部の活動も同様です。企業の知名度が上がれば、より良い人材が獲得しやすくなるでしょう。</p>

<p>DevRelで自社製品の売り上げ拡大を狙う一方で、認知度や信頼性を上げることで費用の減少を狙うのも大きな目的になります。</p>

<h2 id="その他">その他</h2>

<p>その他のDevRelによるメリットとしては、利用者からのフィードバックを得るという点があります。これはマーケティングで言うところのプロダクトマーケットフィット（PMF）になります。ユーザの声を聞くことで、彼らに必要なものを開発できます。余計な機能の開発に工数を割かれることなく、市場にフィットした製品を作り続けることが企業としての生き残り戦略につながるでしょう。</p>

<h2 id="実現する戦術について">実現する戦術について</h2>

<p>こうしたDevRelの戦略を進めるための戦術として次のようなものが考えられます。</p>

<ul>
  <li>ドキュメント整備</li>
  <li>コンテンツマーケティング</li>
  <li>ハンズオン</li>
  <li>ハッカソン</li>
  <li>コミュニティマーケティング</li>
  <li>コンテスト</li>
  <li>動画</li>
  <li>SDK/ライブラリ</li>
  <li>メールマガジン</li>
  <li>eBook</li>
  <li>その他いろいろ</li>
</ul>

<p>この辺りはサービスの特性、費用に合わせて考えるべきでしょう。</p>

<h2 id="まとめ">まとめ</h2>

<p>DevRelの戦略はそれほど複雑ではありません。やること（戦術）が多すぎて複雑に見えてしまいますが、企業（または製品）メリットから考えれば良いだけです。ぜひ皆さんのすべき、できる点を模索してください。</p>

<p>MOONGIFTではDevRelのアウトソーシングを提供しています。DevRelに取り組みたいが、アイディアも人員も不足している…そんな場合はぜひ<a href="/contact">お問い合わせください</a>。コンサルティングも可能です！</p>]]></content><author><name>moongift</name></author><category term="戦略" /><category term="ブログ" /><summary type="html"><![CDATA[DevRelは企業の事業活動の一環として行われます。この点がコミュニティやオープンソース・ソフトウェアの開発とは異なります。そして活動範囲は大きく分けて3つに分類されると考えられます。]]></summary></entry></feed>